name: Tests

on:
  - push
  - pull_request

jobs:
  test:
    name: ${{ matrix.session }} ${{ matrix.python }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.7", os: "ubuntu-latest", session: "tests" }
          - { python: "3.8", os: "ubuntu-latest", session: "tests" }
          - { python: "3.9", os: "ubuntu-latest", session: "tests" }
          - { python: "3.10", os: "ubuntu-latest", session: "tests" }
          - { python: "3.7", os: "macos-latest", session: "tests" }
          - { python: "3.8", os: "macos-latest", session: "tests" }
          - { python: "3.9", os: "macos-latest", session: "tests" }
          - { python: "3.10", os: "macos-latest", session: "tests" }

    env:
      NOXSESSION: ${{ matrix.session }}
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies with poetry
        run: |
          poetry install --no-interaction --no-ansi

      - name: Run tests with nox
        run: |
          poetry run nox

  release:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup git
        # TODO (setu): Add email from IT.
        run: |
          git config user.name release-transformer-embeddings
          git config user.email <>

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies with poetry
        run: |
          poetry install --no-interaction --no-ansi --only release

      - name: Release
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository_username: __token__
          repository_password: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry run semantic-release publish
